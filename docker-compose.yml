version: "3.8"

# networks:
#   corp:
#     driver: bridge

services:
  # mongo:
  #   container_name: mongodb
  #   image: bitnami/mongodb:6.0.2
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_data:/bitnami/mongodb
  #   restart: always
  #   environment:
  #     - MONGODB_ROOT_PASSWORD=admin
  #     - MONGODB_USERNAME=admin
  #     - MONGODB_PASSWORD=admin
  #     - MONGODB_DATABASE=social_media
  rabbitmq:
    image: rabbitmq:3.9.25-management
    ports:
      - '5672:5672'
      - '15672:15672'
  elasticsearch:
    image: bitnami/elasticsearch:8.5.0
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - elasticsearch_data:/bitnami/elasticsearch/data
  mediadb:
    image: bitnami/postgresql:15.1.0
    environment:
      - POSTGRESQL_USERNAME=admin
      - POSTGRESQL_PASSWORD=password
      - POSTGRESQL_DATABASE=media
    ports:
      - '5433:5432'
    volumes:
      - mediadb_data:/var/lib/postgresql/data
  keycloakdb:
    image: bitnami/postgresql:15.1.0
    environment:
      - POSTGRESQL_USERNAME=admin
      - POSTGRESQL_PASSWORD=password
      - POSTGRESQL_DATABASE=keycloack
    ports:
      - '5432:5432'
    volumes:
      - keycloakdb_data:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4:6.16
    depends_on:
      - mediadb
      - keycloakdb
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.ma
      - PGADMIN_DEFAULT_PASSWORD=password
    ports:
      - '8081:80'
    volumes:
      - pgadmin_data:/root/.pgadmin
  keycloak:
    image: bitnami/keycloak:20.0.1
    depends_on:
      - keycloakdb
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_CREATE_ADMIN_USER=true
      - KEYCLOAK_ADMIN_USER=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
      - KEYCLOAK_DATABASE_NAME=keycloack
      - KEYCLOAK_DATABASE_USER=admin
      - KEYCLOAK_DATABASE_PASSWORD=password
      - KEYCLOAK_DATABASE_HOST=keycloakdb
    volumes:
      - keycloak_data:/bitnami/keycloak

volumes:
  mono-node-modules: null
  # mongodb_data:
  #   driver: local
  elasticsearch_data:
    driver: local
  keycloak_data:
    driver: local
  pgadmin_data:
    driver: local
  mediadb_data:
    driver: local
  keycloakdb_data:
    driver: local
  # communication:
  #   extends:
  #     file: docker-compose.base.yml
  #     service: nx-app-base
  #   command: npm run api-communication:docker:dev
  #   ports:
  #     - 3005:3005
  #     - 3338:3338
  #   depends_on:
  #     - mongo
  #     - rabbitmq

  # media:
  #   extends:
  #     file: docker-compose.base.yml
  #     service: nx-app-base
  #   command: npm run api-media:docker:dev
  #   ports:
  #     - 3004:3004
  #     - 3337:3337
  #   depends_on:
  #     - mongo
  #     - rabbitmq

  # search:
  #   extends:
  #     file: docker-compose.base.yml
  #     service: nx-app-base
  #   command: npm run api-search:docker:dev
  #   ports:
  #     - 3003:3003
  #     - 3336:3336
  #   depends_on:
  #     - mongo
  #     - rabbitmq
  #     - elasticsearch

  # tags:
  #   extends:
  #     file: docker-compose.base.yml
  #     service: nx-app-base
  #   command: npm run api-tags:docker:dev
  #   ports:
  #     - 3002:3002
  #     - 3335:3335
  #   depends_on:
  #     - mongo
  #     - rabbitmq

  # posts:
  #   extends:
  #     file: docker-compose.base.yml
  #     service: nx-app-base
  #   command: npm run api-posts:docker:dev
  #   ports:
  #     - 3001:3001
  #     - 3334:3334
  #   depends_on:
  #     - mongo
  #     - rabbitmq

  # gateway:
  #   extends:
  #     file: docker-compose.base.yml
  #     service: nx-app-base
  #   command: npm run api-gateway:docker:dev
  #   networks:
  #     - corp
  #   ports:
  #     - 3000:3000
  #     - 3333:3333
  #   depends_on:
  #     - mongo
  #     - rabbitmq
  #     - posts
  #     - tags
  #     - search
  #     - media
  #     - communication

  # client:
  #   extends:
  #     file: docker-compose.base.yml
  #     service: nx-app-base
  #   command: npm run client:docker:dev
  #   ports:
  #     - 4200:4200
  #   depends_on:
  #     - mongo
  #     - rabbitmq

